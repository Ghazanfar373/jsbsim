//******************************************************************
// 
//  Generated by IDL to C++ Translator
//  
//  File name: QTControlDcps.cpp
//  Source: QTControlData/QTControlDcps.idl
//  Generated: Fri Dec  2 14:16:53 2016
//  OpenSplice V5.5.1OSS
//  
//******************************************************************

#include "QTControlDcps.h"

#if DDS_USE_EXPLICIT_TEMPLATES
template class DDS_DCPSUFLSeq < QTControl::QtControlData, struct QtControlDataSeq_uniq_>;
#endif

const char * QTControl::QtControlDataTypeSupportInterface::_local_id = "IDL:QTControl/QtControlDataTypeSupportInterface:1.0";

QTControl::QtControlDataTypeSupportInterface_ptr QTControl::QtControlDataTypeSupportInterface::_duplicate (QTControl::QtControlDataTypeSupportInterface_ptr p)
{
   if (p) p->m_count++;
   return p;
}

DDS::Boolean QTControl::QtControlDataTypeSupportInterface::_local_is_a (const char * _id)
{
   if (strcmp (_id, QTControl::QtControlDataTypeSupportInterface::_local_id) == 0)
   {
      return true;
   }

   typedef DDS::TypeSupport NestedBase_1;

   if (NestedBase_1::_local_is_a (_id))
   {
      return true;
   }

   return false;
}

QTControl::QtControlDataTypeSupportInterface_ptr QTControl::QtControlDataTypeSupportInterface::_narrow (DDS::Object_ptr p)
{
   QTControl::QtControlDataTypeSupportInterface_ptr result = NULL;
   if (p && p->_is_a (QTControl::QtControlDataTypeSupportInterface::_local_id))
   {
      result = dynamic_cast < QTControl::QtControlDataTypeSupportInterface_ptr> (p);
      result->m_count++;
   }
   return result;
}

QTControl::QtControlDataTypeSupportInterface_ptr QTControl::QtControlDataTypeSupportInterface::_unchecked_narrow (DDS::Object_ptr p)
{
   QTControl::QtControlDataTypeSupportInterface_ptr result;
   result = dynamic_cast < QTControl::QtControlDataTypeSupportInterface_ptr> (p);
   result->m_count++;
   return result;
}

const char * QTControl::QtControlDataDataWriter::_local_id = "IDL:QTControl/QtControlDataDataWriter:1.0";

QTControl::QtControlDataDataWriter_ptr QTControl::QtControlDataDataWriter::_duplicate (QTControl::QtControlDataDataWriter_ptr p)
{
   if (p) p->m_count++;
   return p;
}

DDS::Boolean QTControl::QtControlDataDataWriter::_local_is_a (const char * _id)
{
   if (strcmp (_id, QTControl::QtControlDataDataWriter::_local_id) == 0)
   {
      return true;
   }

   typedef DDS::DataWriter NestedBase_1;

   if (NestedBase_1::_local_is_a (_id))
   {
      return true;
   }

   return false;
}

QTControl::QtControlDataDataWriter_ptr QTControl::QtControlDataDataWriter::_narrow (DDS::Object_ptr p)
{
   QTControl::QtControlDataDataWriter_ptr result = NULL;
   if (p && p->_is_a (QTControl::QtControlDataDataWriter::_local_id))
   {
      result = dynamic_cast < QTControl::QtControlDataDataWriter_ptr> (p);
      result->m_count++;
   }
   return result;
}

QTControl::QtControlDataDataWriter_ptr QTControl::QtControlDataDataWriter::_unchecked_narrow (DDS::Object_ptr p)
{
   QTControl::QtControlDataDataWriter_ptr result;
   result = dynamic_cast < QTControl::QtControlDataDataWriter_ptr> (p);
   result->m_count++;
   return result;
}

const char * QTControl::QtControlDataDataReader::_local_id = "IDL:QTControl/QtControlDataDataReader:1.0";

QTControl::QtControlDataDataReader_ptr QTControl::QtControlDataDataReader::_duplicate (QTControl::QtControlDataDataReader_ptr p)
{
   if (p) p->m_count++;
   return p;
}

DDS::Boolean QTControl::QtControlDataDataReader::_local_is_a (const char * _id)
{
   if (strcmp (_id, QTControl::QtControlDataDataReader::_local_id) == 0)
   {
      return true;
   }

   typedef DDS::DataReader NestedBase_1;

   if (NestedBase_1::_local_is_a (_id))
   {
      return true;
   }

   return false;
}

QTControl::QtControlDataDataReader_ptr QTControl::QtControlDataDataReader::_narrow (DDS::Object_ptr p)
{
   QTControl::QtControlDataDataReader_ptr result = NULL;
   if (p && p->_is_a (QTControl::QtControlDataDataReader::_local_id))
   {
      result = dynamic_cast < QTControl::QtControlDataDataReader_ptr> (p);
      result->m_count++;
   }
   return result;
}

QTControl::QtControlDataDataReader_ptr QTControl::QtControlDataDataReader::_unchecked_narrow (DDS::Object_ptr p)
{
   QTControl::QtControlDataDataReader_ptr result;
   result = dynamic_cast < QTControl::QtControlDataDataReader_ptr> (p);
   result->m_count++;
   return result;
}

const char * QTControl::QtControlDataDataReaderView::_local_id = "IDL:QTControl/QtControlDataDataReaderView:1.0";

QTControl::QtControlDataDataReaderView_ptr QTControl::QtControlDataDataReaderView::_duplicate (QTControl::QtControlDataDataReaderView_ptr p)
{
   if (p) p->m_count++;
   return p;
}

DDS::Boolean QTControl::QtControlDataDataReaderView::_local_is_a (const char * _id)
{
   if (strcmp (_id, QTControl::QtControlDataDataReaderView::_local_id) == 0)
   {
      return true;
   }

   typedef DDS::DataReaderView NestedBase_1;

   if (NestedBase_1::_local_is_a (_id))
   {
      return true;
   }

   return false;
}

QTControl::QtControlDataDataReaderView_ptr QTControl::QtControlDataDataReaderView::_narrow (DDS::Object_ptr p)
{
   QTControl::QtControlDataDataReaderView_ptr result = NULL;
   if (p && p->_is_a (QTControl::QtControlDataDataReaderView::_local_id))
   {
      result = dynamic_cast < QTControl::QtControlDataDataReaderView_ptr> (p);
      result->m_count++;
   }
   return result;
}

QTControl::QtControlDataDataReaderView_ptr QTControl::QtControlDataDataReaderView::_unchecked_narrow (DDS::Object_ptr p)
{
   QTControl::QtControlDataDataReaderView_ptr result;
   result = dynamic_cast < QTControl::QtControlDataDataReaderView_ptr> (p);
   result->m_count++;
   return result;
}



