//******************************************************************
// 
//  Generated by IDL to C++ Translator
//  
//  File name: QTControlDcps.h
//  Source: QTControlData/QTControlDcps.idl
//  Generated: Fri Dec  2 14:16:53 2016
//  OpenSplice V5.5.1OSS
//  
//******************************************************************
#ifndef _QTCONTROLDCPS_H_
#define _QTCONTROLDCPS_H_

#include "sacpp_mapping.h"
#include "sacpp_DDS_DCPS.h"
#include "dds_dcps_interfaces.h"
#include "QTControl.h"
#include "dds_builtinTopics.h"
#include "dds_dcps_builtintopics.h"

namespace QTControl
{
   struct QtControlData;

   class QtControlDataTypeSupportInterface;

   typedef QtControlDataTypeSupportInterface * QtControlDataTypeSupportInterface_ptr;
   typedef DDS_DCPSInterface_var < QtControlDataTypeSupportInterface> QtControlDataTypeSupportInterface_var;
   typedef DDS_DCPSInterface_out < QtControlDataTypeSupportInterface> QtControlDataTypeSupportInterface_out;


   class QtControlDataDataWriter;

   typedef QtControlDataDataWriter * QtControlDataDataWriter_ptr;
   typedef DDS_DCPSInterface_var < QtControlDataDataWriter> QtControlDataDataWriter_var;
   typedef DDS_DCPSInterface_out < QtControlDataDataWriter> QtControlDataDataWriter_out;


   class QtControlDataDataReader;

   typedef QtControlDataDataReader * QtControlDataDataReader_ptr;
   typedef DDS_DCPSInterface_var < QtControlDataDataReader> QtControlDataDataReader_var;
   typedef DDS_DCPSInterface_out < QtControlDataDataReader> QtControlDataDataReader_out;


   class QtControlDataDataReaderView;

   typedef QtControlDataDataReaderView * QtControlDataDataReaderView_ptr;
   typedef DDS_DCPSInterface_var < QtControlDataDataReaderView> QtControlDataDataReaderView_var;
   typedef DDS_DCPSInterface_out < QtControlDataDataReaderView> QtControlDataDataReaderView_out;

   struct QtControlDataSeq_uniq_ {};
   typedef DDS_DCPSUFLSeq < QtControlData, struct QtControlDataSeq_uniq_> QtControlDataSeq;
   typedef DDS_DCPSSequence_var < QtControlDataSeq> QtControlDataSeq_var;
   typedef DDS_DCPSSequence_out < QtControlDataSeq> QtControlDataSeq_out;
   class QtControlDataTypeSupportInterface
   :
      virtual public DDS::TypeSupport
   { 
   public:
      typedef QtControlDataTypeSupportInterface_ptr _ptr_type;
      typedef QtControlDataTypeSupportInterface_var _var_type;

      static QtControlDataTypeSupportInterface_ptr _duplicate (QtControlDataTypeSupportInterface_ptr obj);
      DDS::Boolean _local_is_a (const char * id);

      static QtControlDataTypeSupportInterface_ptr _narrow (DDS::Object_ptr obj);
      static QtControlDataTypeSupportInterface_ptr _unchecked_narrow (DDS::Object_ptr obj);
      static QtControlDataTypeSupportInterface_ptr _nil () { return 0; }
      static const char * _local_id;
      QtControlDataTypeSupportInterface_ptr _this () { return this; }


   protected:
      QtControlDataTypeSupportInterface () {};
      ~QtControlDataTypeSupportInterface () {};
   private:
      QtControlDataTypeSupportInterface (const QtControlDataTypeSupportInterface &);
      QtControlDataTypeSupportInterface & operator = (const QtControlDataTypeSupportInterface &);
   };

   class QtControlDataDataWriter
   :
      virtual public DDS::DataWriter
   { 
   public:
      typedef QtControlDataDataWriter_ptr _ptr_type;
      typedef QtControlDataDataWriter_var _var_type;

      static QtControlDataDataWriter_ptr _duplicate (QtControlDataDataWriter_ptr obj);
      DDS::Boolean _local_is_a (const char * id);

      static QtControlDataDataWriter_ptr _narrow (DDS::Object_ptr obj);
      static QtControlDataDataWriter_ptr _unchecked_narrow (DDS::Object_ptr obj);
      static QtControlDataDataWriter_ptr _nil () { return 0; }
      static const char * _local_id;
      QtControlDataDataWriter_ptr _this () { return this; }

      virtual DDS::InstanceHandle_t register_instance (const QtControlData& instance_data) = 0;
      virtual DDS::InstanceHandle_t register_instance_w_timestamp (const QtControlData& instance_data, const DDS::Time_t& source_timestamp) = 0;
      virtual DDS::ReturnCode_t unregister_instance (const QtControlData& instance_data, DDS::InstanceHandle_t handle) = 0;
      virtual DDS::ReturnCode_t unregister_instance_w_timestamp (const QtControlData& instance_data, DDS::InstanceHandle_t handle, const DDS::Time_t& source_timestamp) = 0;
      virtual DDS::ReturnCode_t write (const QtControlData& instance_data, DDS::InstanceHandle_t handle) = 0;
      virtual DDS::ReturnCode_t write_w_timestamp (const QtControlData& instance_data, DDS::InstanceHandle_t handle, const DDS::Time_t& source_timestamp) = 0;
      virtual DDS::ReturnCode_t dispose (const QtControlData& instance_data, DDS::InstanceHandle_t handle) = 0;
      virtual DDS::ReturnCode_t dispose_w_timestamp (const QtControlData& instance_data, DDS::InstanceHandle_t handle, const DDS::Time_t& source_timestamp) = 0;
      virtual DDS::ReturnCode_t writedispose (const QtControlData& instance_data, DDS::InstanceHandle_t handle) = 0;
      virtual DDS::ReturnCode_t writedispose_w_timestamp (const QtControlData& instance_data, DDS::InstanceHandle_t handle, const DDS::Time_t& source_timestamp) = 0;
      virtual DDS::ReturnCode_t get_key_value (QtControlData& key_holder, DDS::InstanceHandle_t handle) = 0;
      virtual DDS::InstanceHandle_t lookup_instance (const QtControlData& instance_data) = 0;

   protected:
      QtControlDataDataWriter () {};
      ~QtControlDataDataWriter () {};
   private:
      QtControlDataDataWriter (const QtControlDataDataWriter &);
      QtControlDataDataWriter & operator = (const QtControlDataDataWriter &);
   };

   class QtControlDataDataReader
   :
      virtual public DDS::DataReader
   { 
   public:
      typedef QtControlDataDataReader_ptr _ptr_type;
      typedef QtControlDataDataReader_var _var_type;

      static QtControlDataDataReader_ptr _duplicate (QtControlDataDataReader_ptr obj);
      DDS::Boolean _local_is_a (const char * id);

      static QtControlDataDataReader_ptr _narrow (DDS::Object_ptr obj);
      static QtControlDataDataReader_ptr _unchecked_narrow (DDS::Object_ptr obj);
      static QtControlDataDataReader_ptr _nil () { return 0; }
      static const char * _local_id;
      QtControlDataDataReader_ptr _this () { return this; }

      virtual DDS::ReturnCode_t read (QtControlDataSeq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::SampleStateMask sample_states, DDS::ViewStateMask view_states, DDS::InstanceStateMask instance_states) = 0;
      virtual DDS::ReturnCode_t take (QtControlDataSeq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::SampleStateMask sample_states, DDS::ViewStateMask view_states, DDS::InstanceStateMask instance_states) = 0;
      virtual DDS::ReturnCode_t read_w_condition (QtControlDataSeq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::ReadCondition_ptr a_condition) = 0;
      virtual DDS::ReturnCode_t take_w_condition (QtControlDataSeq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::ReadCondition_ptr a_condition) = 0;
      virtual DDS::ReturnCode_t read_next_sample (QtControlData& received_data, DDS::SampleInfo& sample_info) = 0;
      virtual DDS::ReturnCode_t take_next_sample (QtControlData& received_data, DDS::SampleInfo& sample_info) = 0;
      virtual DDS::ReturnCode_t read_instance (QtControlDataSeq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::InstanceHandle_t a_handle, DDS::SampleStateMask sample_states, DDS::ViewStateMask view_states, DDS::InstanceStateMask instance_states) = 0;
      virtual DDS::ReturnCode_t take_instance (QtControlDataSeq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::InstanceHandle_t a_handle, DDS::SampleStateMask sample_states, DDS::ViewStateMask view_states, DDS::InstanceStateMask instance_states) = 0;
      virtual DDS::ReturnCode_t read_next_instance (QtControlDataSeq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::InstanceHandle_t a_handle, DDS::SampleStateMask sample_states, DDS::ViewStateMask view_states, DDS::InstanceStateMask instance_states) = 0;
      virtual DDS::ReturnCode_t take_next_instance (QtControlDataSeq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::InstanceHandle_t a_handle, DDS::SampleStateMask sample_states, DDS::ViewStateMask view_states, DDS::InstanceStateMask instance_states) = 0;
      virtual DDS::ReturnCode_t read_next_instance_w_condition (QtControlDataSeq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::InstanceHandle_t a_handle, DDS::ReadCondition_ptr a_condition) = 0;
      virtual DDS::ReturnCode_t take_next_instance_w_condition (QtControlDataSeq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::InstanceHandle_t a_handle, DDS::ReadCondition_ptr a_condition) = 0;
      virtual DDS::ReturnCode_t return_loan (QtControlDataSeq& received_data, DDS::SampleInfoSeq& info_seq) = 0;
      virtual DDS::ReturnCode_t get_key_value (QtControlData& key_holder, DDS::InstanceHandle_t handle) = 0;
      virtual DDS::InstanceHandle_t lookup_instance (const QtControlData& instance) = 0;

   protected:
      QtControlDataDataReader () {};
      ~QtControlDataDataReader () {};
   private:
      QtControlDataDataReader (const QtControlDataDataReader &);
      QtControlDataDataReader & operator = (const QtControlDataDataReader &);
   };

   class QtControlDataDataReaderView
   :
      virtual public DDS::DataReaderView
   { 
   public:
      typedef QtControlDataDataReaderView_ptr _ptr_type;
      typedef QtControlDataDataReaderView_var _var_type;

      static QtControlDataDataReaderView_ptr _duplicate (QtControlDataDataReaderView_ptr obj);
      DDS::Boolean _local_is_a (const char * id);

      static QtControlDataDataReaderView_ptr _narrow (DDS::Object_ptr obj);
      static QtControlDataDataReaderView_ptr _unchecked_narrow (DDS::Object_ptr obj);
      static QtControlDataDataReaderView_ptr _nil () { return 0; }
      static const char * _local_id;
      QtControlDataDataReaderView_ptr _this () { return this; }

      virtual DDS::ReturnCode_t read (QtControlDataSeq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::SampleStateMask sample_states, DDS::ViewStateMask view_states, DDS::InstanceStateMask instance_states) = 0;
      virtual DDS::ReturnCode_t take (QtControlDataSeq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::SampleStateMask sample_states, DDS::ViewStateMask view_states, DDS::InstanceStateMask instance_states) = 0;
      virtual DDS::ReturnCode_t read_w_condition (QtControlDataSeq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::ReadCondition_ptr a_condition) = 0;
      virtual DDS::ReturnCode_t take_w_condition (QtControlDataSeq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::ReadCondition_ptr a_condition) = 0;
      virtual DDS::ReturnCode_t read_next_sample (QtControlData& received_data, DDS::SampleInfo& sample_info) = 0;
      virtual DDS::ReturnCode_t take_next_sample (QtControlData& received_data, DDS::SampleInfo& sample_info) = 0;
      virtual DDS::ReturnCode_t read_instance (QtControlDataSeq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::InstanceHandle_t a_handle, DDS::SampleStateMask sample_states, DDS::ViewStateMask view_states, DDS::InstanceStateMask instance_states) = 0;
      virtual DDS::ReturnCode_t take_instance (QtControlDataSeq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::InstanceHandle_t a_handle, DDS::SampleStateMask sample_states, DDS::ViewStateMask view_states, DDS::InstanceStateMask instance_states) = 0;
      virtual DDS::ReturnCode_t read_next_instance (QtControlDataSeq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::InstanceHandle_t a_handle, DDS::SampleStateMask sample_states, DDS::ViewStateMask view_states, DDS::InstanceStateMask instance_states) = 0;
      virtual DDS::ReturnCode_t take_next_instance (QtControlDataSeq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::InstanceHandle_t a_handle, DDS::SampleStateMask sample_states, DDS::ViewStateMask view_states, DDS::InstanceStateMask instance_states) = 0;
      virtual DDS::ReturnCode_t read_next_instance_w_condition (QtControlDataSeq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::InstanceHandle_t a_handle, DDS::ReadCondition_ptr a_condition) = 0;
      virtual DDS::ReturnCode_t take_next_instance_w_condition (QtControlDataSeq& received_data, DDS::SampleInfoSeq& info_seq, DDS::Long max_samples, DDS::InstanceHandle_t a_handle, DDS::ReadCondition_ptr a_condition) = 0;
      virtual DDS::ReturnCode_t return_loan (QtControlDataSeq& received_data, DDS::SampleInfoSeq& info_seq) = 0;
      virtual DDS::ReturnCode_t get_key_value (QtControlData& key_holder, DDS::InstanceHandle_t handle) = 0;
      virtual DDS::InstanceHandle_t lookup_instance (const QtControlData& instance) = 0;

   protected:
      QtControlDataDataReaderView () {};
      ~QtControlDataDataReaderView () {};
   private:
      QtControlDataDataReaderView (const QtControlDataDataReaderView &);
      QtControlDataDataReaderView & operator = (const QtControlDataDataReaderView &);
   };

}
template <>
DDS::BuiltinTopicKey_t_slice* DDS_DCPS_ArrayHelper < DDS::BuiltinTopicKey_t, DDS::BuiltinTopicKey_t_slice, DDS::BuiltinTopicKey_t_uniq_>::alloc ();
template <>
void DDS_DCPS_ArrayHelper < DDS::BuiltinTopicKey_t, DDS::BuiltinTopicKey_t_slice, DDS::BuiltinTopicKey_t_uniq_>::copy (DDS::BuiltinTopicKey_t_slice *to, const DDS::BuiltinTopicKey_t_slice* from);
template <>
void DDS_DCPS_ArrayHelper < DDS::BuiltinTopicKey_t, DDS::BuiltinTopicKey_t_slice, DDS::BuiltinTopicKey_t_uniq_>::free (DDS::BuiltinTopicKey_t_slice *ptr);




#endif 
