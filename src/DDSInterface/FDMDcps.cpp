//******************************************************************
// 
//  Generated by IDL to C++ Translator
//  
//  File name: FDMDcps.cpp
//  Source: FDMData/FDMDcps.idl
//  Generated: Sat Feb 18 13:31:06 2017
//  OpenSplice V5.5.1OSS
//  
//******************************************************************

#include "FDMDcps.h"

#if DDS_USE_EXPLICIT_TEMPLATES
template class DDS_DCPSUFLSeq < FDM::fdmdata, struct fdmdataSeq_uniq_>;
#endif

const char * FDM::fdmdataTypeSupportInterface::_local_id = "IDL:FDM/fdmdataTypeSupportInterface:1.0";

FDM::fdmdataTypeSupportInterface_ptr FDM::fdmdataTypeSupportInterface::_duplicate (FDM::fdmdataTypeSupportInterface_ptr p)
{
   if (p) p->m_count++;
   return p;
}

DDS::Boolean FDM::fdmdataTypeSupportInterface::_local_is_a (const char * _id)
{
   if (strcmp (_id, FDM::fdmdataTypeSupportInterface::_local_id) == 0)
   {
      return true;
   }

   typedef DDS::TypeSupport NestedBase_1;

   if (NestedBase_1::_local_is_a (_id))
   {
      return true;
   }

   return false;
}

FDM::fdmdataTypeSupportInterface_ptr FDM::fdmdataTypeSupportInterface::_narrow (DDS::Object_ptr p)
{
   FDM::fdmdataTypeSupportInterface_ptr result = NULL;
   if (p && p->_is_a (FDM::fdmdataTypeSupportInterface::_local_id))
   {
      result = dynamic_cast < FDM::fdmdataTypeSupportInterface_ptr> (p);
      result->m_count++;
   }
   return result;
}

FDM::fdmdataTypeSupportInterface_ptr FDM::fdmdataTypeSupportInterface::_unchecked_narrow (DDS::Object_ptr p)
{
   FDM::fdmdataTypeSupportInterface_ptr result;
   result = dynamic_cast < FDM::fdmdataTypeSupportInterface_ptr> (p);
   result->m_count++;
   return result;
}

const char * FDM::fdmdataDataWriter::_local_id = "IDL:FDM/fdmdataDataWriter:1.0";

FDM::fdmdataDataWriter_ptr FDM::fdmdataDataWriter::_duplicate (FDM::fdmdataDataWriter_ptr p)
{
   if (p) p->m_count++;
   return p;
}

DDS::Boolean FDM::fdmdataDataWriter::_local_is_a (const char * _id)
{
   if (strcmp (_id, FDM::fdmdataDataWriter::_local_id) == 0)
   {
      return true;
   }

   typedef DDS::DataWriter NestedBase_1;

   if (NestedBase_1::_local_is_a (_id))
   {
      return true;
   }

   return false;
}

FDM::fdmdataDataWriter_ptr FDM::fdmdataDataWriter::_narrow (DDS::Object_ptr p)
{
   FDM::fdmdataDataWriter_ptr result = NULL;
   if (p && p->_is_a (FDM::fdmdataDataWriter::_local_id))
   {
      result = dynamic_cast < FDM::fdmdataDataWriter_ptr> (p);
      result->m_count++;
   }
   return result;
}

FDM::fdmdataDataWriter_ptr FDM::fdmdataDataWriter::_unchecked_narrow (DDS::Object_ptr p)
{
   FDM::fdmdataDataWriter_ptr result;
   result = dynamic_cast < FDM::fdmdataDataWriter_ptr> (p);
   result->m_count++;
   return result;
}

const char * FDM::fdmdataDataReader::_local_id = "IDL:FDM/fdmdataDataReader:1.0";

FDM::fdmdataDataReader_ptr FDM::fdmdataDataReader::_duplicate (FDM::fdmdataDataReader_ptr p)
{
   if (p) p->m_count++;
   return p;
}

DDS::Boolean FDM::fdmdataDataReader::_local_is_a (const char * _id)
{
   if (strcmp (_id, FDM::fdmdataDataReader::_local_id) == 0)
   {
      return true;
   }

   typedef DDS::DataReader NestedBase_1;

   if (NestedBase_1::_local_is_a (_id))
   {
      return true;
   }

   return false;
}

FDM::fdmdataDataReader_ptr FDM::fdmdataDataReader::_narrow (DDS::Object_ptr p)
{
   FDM::fdmdataDataReader_ptr result = NULL;
   if (p && p->_is_a (FDM::fdmdataDataReader::_local_id))
   {
      result = dynamic_cast < FDM::fdmdataDataReader_ptr> (p);
      result->m_count++;
   }
   return result;
}

FDM::fdmdataDataReader_ptr FDM::fdmdataDataReader::_unchecked_narrow (DDS::Object_ptr p)
{
   FDM::fdmdataDataReader_ptr result;
   result = dynamic_cast < FDM::fdmdataDataReader_ptr> (p);
   result->m_count++;
   return result;
}

const char * FDM::fdmdataDataReaderView::_local_id = "IDL:FDM/fdmdataDataReaderView:1.0";

FDM::fdmdataDataReaderView_ptr FDM::fdmdataDataReaderView::_duplicate (FDM::fdmdataDataReaderView_ptr p)
{
   if (p) p->m_count++;
   return p;
}

DDS::Boolean FDM::fdmdataDataReaderView::_local_is_a (const char * _id)
{
   if (strcmp (_id, FDM::fdmdataDataReaderView::_local_id) == 0)
   {
      return true;
   }

   typedef DDS::DataReaderView NestedBase_1;

   if (NestedBase_1::_local_is_a (_id))
   {
      return true;
   }

   return false;
}

FDM::fdmdataDataReaderView_ptr FDM::fdmdataDataReaderView::_narrow (DDS::Object_ptr p)
{
   FDM::fdmdataDataReaderView_ptr result = NULL;
   if (p && p->_is_a (FDM::fdmdataDataReaderView::_local_id))
   {
      result = dynamic_cast < FDM::fdmdataDataReaderView_ptr> (p);
      result->m_count++;
   }
   return result;
}

FDM::fdmdataDataReaderView_ptr FDM::fdmdataDataReaderView::_unchecked_narrow (DDS::Object_ptr p)
{
   FDM::fdmdataDataReaderView_ptr result;
   result = dynamic_cast < FDM::fdmdataDataReaderView_ptr> (p);
   result->m_count++;
   return result;
}



