//******************************************************************
// 
//  Generated by IDL to C++ Translator
//  
//  File name: TacticalAircrafts.cpp
//  Source: TacticalAircrafts.idl
//  Generated: Wed Nov 11 09:15:35 2015
//  OpenSplice V5.5.1OSS
//  
//******************************************************************

#include "TacticalAircrafts.h"


#if DDS_USE_EXPLICIT_TEMPLATES
template class DDS_DCPS_FArray_var< TacticalAircrafts::TacticalAircraftsData::_TEAircraftTimeToCollision_array, TacticalAircrafts::TacticalAircraftsData::_TEAircraftTimeToCollision_array_slice, struct TacticalAircrafts::TacticalAircraftsData::_TEAircraftTimeToCollision_array_uniq_>;
template class DDS_DCPS_Array_forany< TacticalAircrafts::TacticalAircraftsData::_TEAircraftTimeToCollision_array, TacticalAircrafts::TacticalAircraftsData::_TEAircraftTimeToCollision_array_slice, struct TacticalAircrafts::TacticalAircraftsData::_TEAircraftTimeToCollision_array_uniq_>;
#endif

template <>
TacticalAircrafts::TacticalAircraftsData::_TEAircraftTimeToCollision_array_slice* DDS_DCPS_ArrayHelper < TacticalAircrafts::TacticalAircraftsData::_TEAircraftTimeToCollision_array, TacticalAircrafts::TacticalAircraftsData::_TEAircraftTimeToCollision_array_slice, TacticalAircrafts::TacticalAircraftsData::_TEAircraftTimeToCollision_array_uniq_>::alloc ()
{
   return TacticalAircrafts::TacticalAircraftsData::_TEAircraftTimeToCollision_array_alloc ();
}

template <>
void DDS_DCPS_ArrayHelper < TacticalAircrafts::TacticalAircraftsData::_TEAircraftTimeToCollision_array, TacticalAircrafts::TacticalAircraftsData::_TEAircraftTimeToCollision_array_slice, TacticalAircrafts::TacticalAircraftsData::_TEAircraftTimeToCollision_array_uniq_>::copy (TacticalAircrafts::TacticalAircraftsData::_TEAircraftTimeToCollision_array_slice *to, const TacticalAircrafts::TacticalAircraftsData::_TEAircraftTimeToCollision_array_slice* from)
{
   TacticalAircrafts::TacticalAircraftsData::_TEAircraftTimeToCollision_array_copy (to, from);
}

template <>
void DDS_DCPS_ArrayHelper < TacticalAircrafts::TacticalAircraftsData::_TEAircraftTimeToCollision_array, TacticalAircrafts::TacticalAircraftsData::_TEAircraftTimeToCollision_array_slice, TacticalAircrafts::TacticalAircraftsData::_TEAircraftTimeToCollision_array_uniq_>::free (TacticalAircrafts::TacticalAircraftsData::_TEAircraftTimeToCollision_array_slice *ptr)
{
   TacticalAircrafts::TacticalAircraftsData::_TEAircraftTimeToCollision_array_free (ptr);
}

TacticalAircrafts::TacticalAircraftsData::_TEAircraftTimeToCollision_array_slice * TacticalAircrafts::TacticalAircraftsData::_TEAircraftTimeToCollision_array_alloc ()
{
   DDS::Double * ret = (DDS::Double*) new DDS::Double [5];
   return (_TEAircraftTimeToCollision_array_slice *) ret;
}

void TacticalAircrafts::TacticalAircraftsData::_TEAircraftTimeToCollision_array_free (_TEAircraftTimeToCollision_array_slice * s)
{
   delete [] s;
}

void TacticalAircrafts::TacticalAircraftsData::_TEAircraftTimeToCollision_array_copy
(
   _TEAircraftTimeToCollision_array_slice * to,
   const _TEAircraftTimeToCollision_array_slice * from
)
{
   DDS::Double* sv = (DDS::Double*) from;
   DDS::Double* tv = (DDS::Double*) to;
   for (DDS::ULong i = 0; i < 5; i++) tv[i] = sv[i];
}

TacticalAircrafts::TacticalAircraftsData::_TEAircraftTimeToCollision_array_slice * TacticalAircrafts::TacticalAircraftsData::_TEAircraftTimeToCollision_array_dup
   (const _TEAircraftTimeToCollision_array_slice * from)
{
   _TEAircraftTimeToCollision_array_slice * to = _TEAircraftTimeToCollision_array_alloc ();
   _TEAircraftTimeToCollision_array_copy (to, from);
   return to;
}


#if DDS_USE_EXPLICIT_TEMPLATES
template class DDS_DCPS_FArray_var< TacticalAircrafts::TacticalAircraftsData::_TEAircraftOnCollissionCourse_array, TacticalAircrafts::TacticalAircraftsData::_TEAircraftOnCollissionCourse_array_slice, struct TacticalAircrafts::TacticalAircraftsData::_TEAircraftOnCollissionCourse_array_uniq_>;
template class DDS_DCPS_Array_forany< TacticalAircrafts::TacticalAircraftsData::_TEAircraftOnCollissionCourse_array, TacticalAircrafts::TacticalAircraftsData::_TEAircraftOnCollissionCourse_array_slice, struct TacticalAircrafts::TacticalAircraftsData::_TEAircraftOnCollissionCourse_array_uniq_>;
#endif

template <>
TacticalAircrafts::TacticalAircraftsData::_TEAircraftOnCollissionCourse_array_slice* DDS_DCPS_ArrayHelper < TacticalAircrafts::TacticalAircraftsData::_TEAircraftOnCollissionCourse_array, TacticalAircrafts::TacticalAircraftsData::_TEAircraftOnCollissionCourse_array_slice, TacticalAircrafts::TacticalAircraftsData::_TEAircraftOnCollissionCourse_array_uniq_>::alloc ()
{
   return TacticalAircrafts::TacticalAircraftsData::_TEAircraftOnCollissionCourse_array_alloc ();
}

template <>
void DDS_DCPS_ArrayHelper < TacticalAircrafts::TacticalAircraftsData::_TEAircraftOnCollissionCourse_array, TacticalAircrafts::TacticalAircraftsData::_TEAircraftOnCollissionCourse_array_slice, TacticalAircrafts::TacticalAircraftsData::_TEAircraftOnCollissionCourse_array_uniq_>::copy (TacticalAircrafts::TacticalAircraftsData::_TEAircraftOnCollissionCourse_array_slice *to, const TacticalAircrafts::TacticalAircraftsData::_TEAircraftOnCollissionCourse_array_slice* from)
{
   TacticalAircrafts::TacticalAircraftsData::_TEAircraftOnCollissionCourse_array_copy (to, from);
}

template <>
void DDS_DCPS_ArrayHelper < TacticalAircrafts::TacticalAircraftsData::_TEAircraftOnCollissionCourse_array, TacticalAircrafts::TacticalAircraftsData::_TEAircraftOnCollissionCourse_array_slice, TacticalAircrafts::TacticalAircraftsData::_TEAircraftOnCollissionCourse_array_uniq_>::free (TacticalAircrafts::TacticalAircraftsData::_TEAircraftOnCollissionCourse_array_slice *ptr)
{
   TacticalAircrafts::TacticalAircraftsData::_TEAircraftOnCollissionCourse_array_free (ptr);
}

TacticalAircrafts::TacticalAircraftsData::_TEAircraftOnCollissionCourse_array_slice * TacticalAircrafts::TacticalAircraftsData::_TEAircraftOnCollissionCourse_array_alloc ()
{
   DDS::Boolean * ret = (DDS::Boolean*) new DDS::Boolean [5];
   return (_TEAircraftOnCollissionCourse_array_slice *) ret;
}

void TacticalAircrafts::TacticalAircraftsData::_TEAircraftOnCollissionCourse_array_free (_TEAircraftOnCollissionCourse_array_slice * s)
{
   delete [] s;
}

void TacticalAircrafts::TacticalAircraftsData::_TEAircraftOnCollissionCourse_array_copy
(
   _TEAircraftOnCollissionCourse_array_slice * to,
   const _TEAircraftOnCollissionCourse_array_slice * from
)
{
   DDS::Boolean* sv = (DDS::Boolean*) from;
   DDS::Boolean* tv = (DDS::Boolean*) to;
   for (DDS::ULong i = 0; i < 5; i++) tv[i] = sv[i];
}

TacticalAircrafts::TacticalAircraftsData::_TEAircraftOnCollissionCourse_array_slice * TacticalAircrafts::TacticalAircraftsData::_TEAircraftOnCollissionCourse_array_dup
   (const _TEAircraftOnCollissionCourse_array_slice * from)
{
   _TEAircraftOnCollissionCourse_array_slice * to = _TEAircraftOnCollissionCourse_array_alloc ();
   _TEAircraftOnCollissionCourse_array_copy (to, from);
   return to;
}


#if DDS_USE_EXPLICIT_TEMPLATES
template class DDS_DCPS_FArray_var< TacticalAircrafts::TacticalAircraftsData::_TEAircraftRateOfClimb_array, TacticalAircrafts::TacticalAircraftsData::_TEAircraftRateOfClimb_array_slice, struct TacticalAircrafts::TacticalAircraftsData::_TEAircraftRateOfClimb_array_uniq_>;
template class DDS_DCPS_Array_forany< TacticalAircrafts::TacticalAircraftsData::_TEAircraftRateOfClimb_array, TacticalAircrafts::TacticalAircraftsData::_TEAircraftRateOfClimb_array_slice, struct TacticalAircrafts::TacticalAircraftsData::_TEAircraftRateOfClimb_array_uniq_>;
#endif

template <>
TacticalAircrafts::TacticalAircraftsData::_TEAircraftRateOfClimb_array_slice* DDS_DCPS_ArrayHelper < TacticalAircrafts::TacticalAircraftsData::_TEAircraftRateOfClimb_array, TacticalAircrafts::TacticalAircraftsData::_TEAircraftRateOfClimb_array_slice, TacticalAircrafts::TacticalAircraftsData::_TEAircraftRateOfClimb_array_uniq_>::alloc ()
{
   return TacticalAircrafts::TacticalAircraftsData::_TEAircraftRateOfClimb_array_alloc ();
}

template <>
void DDS_DCPS_ArrayHelper < TacticalAircrafts::TacticalAircraftsData::_TEAircraftRateOfClimb_array, TacticalAircrafts::TacticalAircraftsData::_TEAircraftRateOfClimb_array_slice, TacticalAircrafts::TacticalAircraftsData::_TEAircraftRateOfClimb_array_uniq_>::copy (TacticalAircrafts::TacticalAircraftsData::_TEAircraftRateOfClimb_array_slice *to, const TacticalAircrafts::TacticalAircraftsData::_TEAircraftRateOfClimb_array_slice* from)
{
   TacticalAircrafts::TacticalAircraftsData::_TEAircraftRateOfClimb_array_copy (to, from);
}

template <>
void DDS_DCPS_ArrayHelper < TacticalAircrafts::TacticalAircraftsData::_TEAircraftRateOfClimb_array, TacticalAircrafts::TacticalAircraftsData::_TEAircraftRateOfClimb_array_slice, TacticalAircrafts::TacticalAircraftsData::_TEAircraftRateOfClimb_array_uniq_>::free (TacticalAircrafts::TacticalAircraftsData::_TEAircraftRateOfClimb_array_slice *ptr)
{
   TacticalAircrafts::TacticalAircraftsData::_TEAircraftRateOfClimb_array_free (ptr);
}

TacticalAircrafts::TacticalAircraftsData::_TEAircraftRateOfClimb_array_slice * TacticalAircrafts::TacticalAircraftsData::_TEAircraftRateOfClimb_array_alloc ()
{
   DDS::Double * ret = (DDS::Double*) new DDS::Double [5];
   return (_TEAircraftRateOfClimb_array_slice *) ret;
}

void TacticalAircrafts::TacticalAircraftsData::_TEAircraftRateOfClimb_array_free (_TEAircraftRateOfClimb_array_slice * s)
{
   delete [] s;
}

void TacticalAircrafts::TacticalAircraftsData::_TEAircraftRateOfClimb_array_copy
(
   _TEAircraftRateOfClimb_array_slice * to,
   const _TEAircraftRateOfClimb_array_slice * from
)
{
   DDS::Double* sv = (DDS::Double*) from;
   DDS::Double* tv = (DDS::Double*) to;
   for (DDS::ULong i = 0; i < 5; i++) tv[i] = sv[i];
}

TacticalAircrafts::TacticalAircraftsData::_TEAircraftRateOfClimb_array_slice * TacticalAircrafts::TacticalAircraftsData::_TEAircraftRateOfClimb_array_dup
   (const _TEAircraftRateOfClimb_array_slice * from)
{
   _TEAircraftRateOfClimb_array_slice * to = _TEAircraftRateOfClimb_array_alloc ();
   _TEAircraftRateOfClimb_array_copy (to, from);
   return to;
}


#if DDS_USE_EXPLICIT_TEMPLATES
template class DDS_DCPS_FArray_var< TacticalAircrafts::TacticalAircraftsData::_TEAircraftRollAngle_array, TacticalAircrafts::TacticalAircraftsData::_TEAircraftRollAngle_array_slice, struct TacticalAircrafts::TacticalAircraftsData::_TEAircraftRollAngle_array_uniq_>;
template class DDS_DCPS_Array_forany< TacticalAircrafts::TacticalAircraftsData::_TEAircraftRollAngle_array, TacticalAircrafts::TacticalAircraftsData::_TEAircraftRollAngle_array_slice, struct TacticalAircrafts::TacticalAircraftsData::_TEAircraftRollAngle_array_uniq_>;
#endif

template <>
TacticalAircrafts::TacticalAircraftsData::_TEAircraftRollAngle_array_slice* DDS_DCPS_ArrayHelper < TacticalAircrafts::TacticalAircraftsData::_TEAircraftRollAngle_array, TacticalAircrafts::TacticalAircraftsData::_TEAircraftRollAngle_array_slice, TacticalAircrafts::TacticalAircraftsData::_TEAircraftRollAngle_array_uniq_>::alloc ()
{
   return TacticalAircrafts::TacticalAircraftsData::_TEAircraftRollAngle_array_alloc ();
}

template <>
void DDS_DCPS_ArrayHelper < TacticalAircrafts::TacticalAircraftsData::_TEAircraftRollAngle_array, TacticalAircrafts::TacticalAircraftsData::_TEAircraftRollAngle_array_slice, TacticalAircrafts::TacticalAircraftsData::_TEAircraftRollAngle_array_uniq_>::copy (TacticalAircrafts::TacticalAircraftsData::_TEAircraftRollAngle_array_slice *to, const TacticalAircrafts::TacticalAircraftsData::_TEAircraftRollAngle_array_slice* from)
{
   TacticalAircrafts::TacticalAircraftsData::_TEAircraftRollAngle_array_copy (to, from);
}

template <>
void DDS_DCPS_ArrayHelper < TacticalAircrafts::TacticalAircraftsData::_TEAircraftRollAngle_array, TacticalAircrafts::TacticalAircraftsData::_TEAircraftRollAngle_array_slice, TacticalAircrafts::TacticalAircraftsData::_TEAircraftRollAngle_array_uniq_>::free (TacticalAircrafts::TacticalAircraftsData::_TEAircraftRollAngle_array_slice *ptr)
{
   TacticalAircrafts::TacticalAircraftsData::_TEAircraftRollAngle_array_free (ptr);
}

TacticalAircrafts::TacticalAircraftsData::_TEAircraftRollAngle_array_slice * TacticalAircrafts::TacticalAircraftsData::_TEAircraftRollAngle_array_alloc ()
{
   DDS::Double * ret = (DDS::Double*) new DDS::Double [5];
   return (_TEAircraftRollAngle_array_slice *) ret;
}

void TacticalAircrafts::TacticalAircraftsData::_TEAircraftRollAngle_array_free (_TEAircraftRollAngle_array_slice * s)
{
   delete [] s;
}

void TacticalAircrafts::TacticalAircraftsData::_TEAircraftRollAngle_array_copy
(
   _TEAircraftRollAngle_array_slice * to,
   const _TEAircraftRollAngle_array_slice * from
)
{
   DDS::Double* sv = (DDS::Double*) from;
   DDS::Double* tv = (DDS::Double*) to;
   for (DDS::ULong i = 0; i < 5; i++) tv[i] = sv[i];
}

TacticalAircrafts::TacticalAircraftsData::_TEAircraftRollAngle_array_slice * TacticalAircrafts::TacticalAircraftsData::_TEAircraftRollAngle_array_dup
   (const _TEAircraftRollAngle_array_slice * from)
{
   _TEAircraftRollAngle_array_slice * to = _TEAircraftRollAngle_array_alloc ();
   _TEAircraftRollAngle_array_copy (to, from);
   return to;
}


#if DDS_USE_EXPLICIT_TEMPLATES
template class DDS_DCPS_FArray_var< TacticalAircrafts::TacticalAircraftsData::_TEAircraftPitchAngle_array, TacticalAircrafts::TacticalAircraftsData::_TEAircraftPitchAngle_array_slice, struct TacticalAircrafts::TacticalAircraftsData::_TEAircraftPitchAngle_array_uniq_>;
template class DDS_DCPS_Array_forany< TacticalAircrafts::TacticalAircraftsData::_TEAircraftPitchAngle_array, TacticalAircrafts::TacticalAircraftsData::_TEAircraftPitchAngle_array_slice, struct TacticalAircrafts::TacticalAircraftsData::_TEAircraftPitchAngle_array_uniq_>;
#endif

template <>
TacticalAircrafts::TacticalAircraftsData::_TEAircraftPitchAngle_array_slice* DDS_DCPS_ArrayHelper < TacticalAircrafts::TacticalAircraftsData::_TEAircraftPitchAngle_array, TacticalAircrafts::TacticalAircraftsData::_TEAircraftPitchAngle_array_slice, TacticalAircrafts::TacticalAircraftsData::_TEAircraftPitchAngle_array_uniq_>::alloc ()
{
   return TacticalAircrafts::TacticalAircraftsData::_TEAircraftPitchAngle_array_alloc ();
}

template <>
void DDS_DCPS_ArrayHelper < TacticalAircrafts::TacticalAircraftsData::_TEAircraftPitchAngle_array, TacticalAircrafts::TacticalAircraftsData::_TEAircraftPitchAngle_array_slice, TacticalAircrafts::TacticalAircraftsData::_TEAircraftPitchAngle_array_uniq_>::copy (TacticalAircrafts::TacticalAircraftsData::_TEAircraftPitchAngle_array_slice *to, const TacticalAircrafts::TacticalAircraftsData::_TEAircraftPitchAngle_array_slice* from)
{
   TacticalAircrafts::TacticalAircraftsData::_TEAircraftPitchAngle_array_copy (to, from);
}

template <>
void DDS_DCPS_ArrayHelper < TacticalAircrafts::TacticalAircraftsData::_TEAircraftPitchAngle_array, TacticalAircrafts::TacticalAircraftsData::_TEAircraftPitchAngle_array_slice, TacticalAircrafts::TacticalAircraftsData::_TEAircraftPitchAngle_array_uniq_>::free (TacticalAircrafts::TacticalAircraftsData::_TEAircraftPitchAngle_array_slice *ptr)
{
   TacticalAircrafts::TacticalAircraftsData::_TEAircraftPitchAngle_array_free (ptr);
}

TacticalAircrafts::TacticalAircraftsData::_TEAircraftPitchAngle_array_slice * TacticalAircrafts::TacticalAircraftsData::_TEAircraftPitchAngle_array_alloc ()
{
   DDS::Double * ret = (DDS::Double*) new DDS::Double [5];
   return (_TEAircraftPitchAngle_array_slice *) ret;
}

void TacticalAircrafts::TacticalAircraftsData::_TEAircraftPitchAngle_array_free (_TEAircraftPitchAngle_array_slice * s)
{
   delete [] s;
}

void TacticalAircrafts::TacticalAircraftsData::_TEAircraftPitchAngle_array_copy
(
   _TEAircraftPitchAngle_array_slice * to,
   const _TEAircraftPitchAngle_array_slice * from
)
{
   DDS::Double* sv = (DDS::Double*) from;
   DDS::Double* tv = (DDS::Double*) to;
   for (DDS::ULong i = 0; i < 5; i++) tv[i] = sv[i];
}

TacticalAircrafts::TacticalAircraftsData::_TEAircraftPitchAngle_array_slice * TacticalAircrafts::TacticalAircraftsData::_TEAircraftPitchAngle_array_dup
   (const _TEAircraftPitchAngle_array_slice * from)
{
   _TEAircraftPitchAngle_array_slice * to = _TEAircraftPitchAngle_array_alloc ();
   _TEAircraftPitchAngle_array_copy (to, from);
   return to;
}


#if DDS_USE_EXPLICIT_TEMPLATES
template class DDS_DCPS_FArray_var< TacticalAircrafts::TacticalAircraftsData::_TEAircraftHeading_array, TacticalAircrafts::TacticalAircraftsData::_TEAircraftHeading_array_slice, struct TacticalAircrafts::TacticalAircraftsData::_TEAircraftHeading_array_uniq_>;
template class DDS_DCPS_Array_forany< TacticalAircrafts::TacticalAircraftsData::_TEAircraftHeading_array, TacticalAircrafts::TacticalAircraftsData::_TEAircraftHeading_array_slice, struct TacticalAircrafts::TacticalAircraftsData::_TEAircraftHeading_array_uniq_>;
#endif

template <>
TacticalAircrafts::TacticalAircraftsData::_TEAircraftHeading_array_slice* DDS_DCPS_ArrayHelper < TacticalAircrafts::TacticalAircraftsData::_TEAircraftHeading_array, TacticalAircrafts::TacticalAircraftsData::_TEAircraftHeading_array_slice, TacticalAircrafts::TacticalAircraftsData::_TEAircraftHeading_array_uniq_>::alloc ()
{
   return TacticalAircrafts::TacticalAircraftsData::_TEAircraftHeading_array_alloc ();
}

template <>
void DDS_DCPS_ArrayHelper < TacticalAircrafts::TacticalAircraftsData::_TEAircraftHeading_array, TacticalAircrafts::TacticalAircraftsData::_TEAircraftHeading_array_slice, TacticalAircrafts::TacticalAircraftsData::_TEAircraftHeading_array_uniq_>::copy (TacticalAircrafts::TacticalAircraftsData::_TEAircraftHeading_array_slice *to, const TacticalAircrafts::TacticalAircraftsData::_TEAircraftHeading_array_slice* from)
{
   TacticalAircrafts::TacticalAircraftsData::_TEAircraftHeading_array_copy (to, from);
}

template <>
void DDS_DCPS_ArrayHelper < TacticalAircrafts::TacticalAircraftsData::_TEAircraftHeading_array, TacticalAircrafts::TacticalAircraftsData::_TEAircraftHeading_array_slice, TacticalAircrafts::TacticalAircraftsData::_TEAircraftHeading_array_uniq_>::free (TacticalAircrafts::TacticalAircraftsData::_TEAircraftHeading_array_slice *ptr)
{
   TacticalAircrafts::TacticalAircraftsData::_TEAircraftHeading_array_free (ptr);
}

TacticalAircrafts::TacticalAircraftsData::_TEAircraftHeading_array_slice * TacticalAircrafts::TacticalAircraftsData::_TEAircraftHeading_array_alloc ()
{
   DDS::Double * ret = (DDS::Double*) new DDS::Double [5];
   return (_TEAircraftHeading_array_slice *) ret;
}

void TacticalAircrafts::TacticalAircraftsData::_TEAircraftHeading_array_free (_TEAircraftHeading_array_slice * s)
{
   delete [] s;
}

void TacticalAircrafts::TacticalAircraftsData::_TEAircraftHeading_array_copy
(
   _TEAircraftHeading_array_slice * to,
   const _TEAircraftHeading_array_slice * from
)
{
   DDS::Double* sv = (DDS::Double*) from;
   DDS::Double* tv = (DDS::Double*) to;
   for (DDS::ULong i = 0; i < 5; i++) tv[i] = sv[i];
}

TacticalAircrafts::TacticalAircraftsData::_TEAircraftHeading_array_slice * TacticalAircrafts::TacticalAircraftsData::_TEAircraftHeading_array_dup
   (const _TEAircraftHeading_array_slice * from)
{
   _TEAircraftHeading_array_slice * to = _TEAircraftHeading_array_alloc ();
   _TEAircraftHeading_array_copy (to, from);
   return to;
}


#if DDS_USE_EXPLICIT_TEMPLATES
template class DDS_DCPS_FArray_var< TacticalAircrafts::TacticalAircraftsData::_TEAircraftAltitude_array, TacticalAircrafts::TacticalAircraftsData::_TEAircraftAltitude_array_slice, struct TacticalAircrafts::TacticalAircraftsData::_TEAircraftAltitude_array_uniq_>;
template class DDS_DCPS_Array_forany< TacticalAircrafts::TacticalAircraftsData::_TEAircraftAltitude_array, TacticalAircrafts::TacticalAircraftsData::_TEAircraftAltitude_array_slice, struct TacticalAircrafts::TacticalAircraftsData::_TEAircraftAltitude_array_uniq_>;
#endif

template <>
TacticalAircrafts::TacticalAircraftsData::_TEAircraftAltitude_array_slice* DDS_DCPS_ArrayHelper < TacticalAircrafts::TacticalAircraftsData::_TEAircraftAltitude_array, TacticalAircrafts::TacticalAircraftsData::_TEAircraftAltitude_array_slice, TacticalAircrafts::TacticalAircraftsData::_TEAircraftAltitude_array_uniq_>::alloc ()
{
   return TacticalAircrafts::TacticalAircraftsData::_TEAircraftAltitude_array_alloc ();
}

template <>
void DDS_DCPS_ArrayHelper < TacticalAircrafts::TacticalAircraftsData::_TEAircraftAltitude_array, TacticalAircrafts::TacticalAircraftsData::_TEAircraftAltitude_array_slice, TacticalAircrafts::TacticalAircraftsData::_TEAircraftAltitude_array_uniq_>::copy (TacticalAircrafts::TacticalAircraftsData::_TEAircraftAltitude_array_slice *to, const TacticalAircrafts::TacticalAircraftsData::_TEAircraftAltitude_array_slice* from)
{
   TacticalAircrafts::TacticalAircraftsData::_TEAircraftAltitude_array_copy (to, from);
}

template <>
void DDS_DCPS_ArrayHelper < TacticalAircrafts::TacticalAircraftsData::_TEAircraftAltitude_array, TacticalAircrafts::TacticalAircraftsData::_TEAircraftAltitude_array_slice, TacticalAircrafts::TacticalAircraftsData::_TEAircraftAltitude_array_uniq_>::free (TacticalAircrafts::TacticalAircraftsData::_TEAircraftAltitude_array_slice *ptr)
{
   TacticalAircrafts::TacticalAircraftsData::_TEAircraftAltitude_array_free (ptr);
}

TacticalAircrafts::TacticalAircraftsData::_TEAircraftAltitude_array_slice * TacticalAircrafts::TacticalAircraftsData::_TEAircraftAltitude_array_alloc ()
{
   DDS::Double * ret = (DDS::Double*) new DDS::Double [5];
   return (_TEAircraftAltitude_array_slice *) ret;
}

void TacticalAircrafts::TacticalAircraftsData::_TEAircraftAltitude_array_free (_TEAircraftAltitude_array_slice * s)
{
   delete [] s;
}

void TacticalAircrafts::TacticalAircraftsData::_TEAircraftAltitude_array_copy
(
   _TEAircraftAltitude_array_slice * to,
   const _TEAircraftAltitude_array_slice * from
)
{
   DDS::Double* sv = (DDS::Double*) from;
   DDS::Double* tv = (DDS::Double*) to;
   for (DDS::ULong i = 0; i < 5; i++) tv[i] = sv[i];
}

TacticalAircrafts::TacticalAircraftsData::_TEAircraftAltitude_array_slice * TacticalAircrafts::TacticalAircraftsData::_TEAircraftAltitude_array_dup
   (const _TEAircraftAltitude_array_slice * from)
{
   _TEAircraftAltitude_array_slice * to = _TEAircraftAltitude_array_alloc ();
   _TEAircraftAltitude_array_copy (to, from);
   return to;
}


#if DDS_USE_EXPLICIT_TEMPLATES
template class DDS_DCPS_FArray_var< TacticalAircrafts::TacticalAircraftsData::_TEAircraftLongitude_array, TacticalAircrafts::TacticalAircraftsData::_TEAircraftLongitude_array_slice, struct TacticalAircrafts::TacticalAircraftsData::_TEAircraftLongitude_array_uniq_>;
template class DDS_DCPS_Array_forany< TacticalAircrafts::TacticalAircraftsData::_TEAircraftLongitude_array, TacticalAircrafts::TacticalAircraftsData::_TEAircraftLongitude_array_slice, struct TacticalAircrafts::TacticalAircraftsData::_TEAircraftLongitude_array_uniq_>;
#endif

template <>
TacticalAircrafts::TacticalAircraftsData::_TEAircraftLongitude_array_slice* DDS_DCPS_ArrayHelper < TacticalAircrafts::TacticalAircraftsData::_TEAircraftLongitude_array, TacticalAircrafts::TacticalAircraftsData::_TEAircraftLongitude_array_slice, TacticalAircrafts::TacticalAircraftsData::_TEAircraftLongitude_array_uniq_>::alloc ()
{
   return TacticalAircrafts::TacticalAircraftsData::_TEAircraftLongitude_array_alloc ();
}

template <>
void DDS_DCPS_ArrayHelper < TacticalAircrafts::TacticalAircraftsData::_TEAircraftLongitude_array, TacticalAircrafts::TacticalAircraftsData::_TEAircraftLongitude_array_slice, TacticalAircrafts::TacticalAircraftsData::_TEAircraftLongitude_array_uniq_>::copy (TacticalAircrafts::TacticalAircraftsData::_TEAircraftLongitude_array_slice *to, const TacticalAircrafts::TacticalAircraftsData::_TEAircraftLongitude_array_slice* from)
{
   TacticalAircrafts::TacticalAircraftsData::_TEAircraftLongitude_array_copy (to, from);
}

template <>
void DDS_DCPS_ArrayHelper < TacticalAircrafts::TacticalAircraftsData::_TEAircraftLongitude_array, TacticalAircrafts::TacticalAircraftsData::_TEAircraftLongitude_array_slice, TacticalAircrafts::TacticalAircraftsData::_TEAircraftLongitude_array_uniq_>::free (TacticalAircrafts::TacticalAircraftsData::_TEAircraftLongitude_array_slice *ptr)
{
   TacticalAircrafts::TacticalAircraftsData::_TEAircraftLongitude_array_free (ptr);
}

TacticalAircrafts::TacticalAircraftsData::_TEAircraftLongitude_array_slice * TacticalAircrafts::TacticalAircraftsData::_TEAircraftLongitude_array_alloc ()
{
   DDS::Double * ret = (DDS::Double*) new DDS::Double [5];
   return (_TEAircraftLongitude_array_slice *) ret;
}

void TacticalAircrafts::TacticalAircraftsData::_TEAircraftLongitude_array_free (_TEAircraftLongitude_array_slice * s)
{
   delete [] s;
}

void TacticalAircrafts::TacticalAircraftsData::_TEAircraftLongitude_array_copy
(
   _TEAircraftLongitude_array_slice * to,
   const _TEAircraftLongitude_array_slice * from
)
{
   DDS::Double* sv = (DDS::Double*) from;
   DDS::Double* tv = (DDS::Double*) to;
   for (DDS::ULong i = 0; i < 5; i++) tv[i] = sv[i];
}

TacticalAircrafts::TacticalAircraftsData::_TEAircraftLongitude_array_slice * TacticalAircrafts::TacticalAircraftsData::_TEAircraftLongitude_array_dup
   (const _TEAircraftLongitude_array_slice * from)
{
   _TEAircraftLongitude_array_slice * to = _TEAircraftLongitude_array_alloc ();
   _TEAircraftLongitude_array_copy (to, from);
   return to;
}


#if DDS_USE_EXPLICIT_TEMPLATES
template class DDS_DCPS_FArray_var< TacticalAircrafts::TacticalAircraftsData::_TEAircraftLatitude_array, TacticalAircrafts::TacticalAircraftsData::_TEAircraftLatitude_array_slice, struct TacticalAircrafts::TacticalAircraftsData::_TEAircraftLatitude_array_uniq_>;
template class DDS_DCPS_Array_forany< TacticalAircrafts::TacticalAircraftsData::_TEAircraftLatitude_array, TacticalAircrafts::TacticalAircraftsData::_TEAircraftLatitude_array_slice, struct TacticalAircrafts::TacticalAircraftsData::_TEAircraftLatitude_array_uniq_>;
#endif

template <>
TacticalAircrafts::TacticalAircraftsData::_TEAircraftLatitude_array_slice* DDS_DCPS_ArrayHelper < TacticalAircrafts::TacticalAircraftsData::_TEAircraftLatitude_array, TacticalAircrafts::TacticalAircraftsData::_TEAircraftLatitude_array_slice, TacticalAircrafts::TacticalAircraftsData::_TEAircraftLatitude_array_uniq_>::alloc ()
{
   return TacticalAircrafts::TacticalAircraftsData::_TEAircraftLatitude_array_alloc ();
}

template <>
void DDS_DCPS_ArrayHelper < TacticalAircrafts::TacticalAircraftsData::_TEAircraftLatitude_array, TacticalAircrafts::TacticalAircraftsData::_TEAircraftLatitude_array_slice, TacticalAircrafts::TacticalAircraftsData::_TEAircraftLatitude_array_uniq_>::copy (TacticalAircrafts::TacticalAircraftsData::_TEAircraftLatitude_array_slice *to, const TacticalAircrafts::TacticalAircraftsData::_TEAircraftLatitude_array_slice* from)
{
   TacticalAircrafts::TacticalAircraftsData::_TEAircraftLatitude_array_copy (to, from);
}

template <>
void DDS_DCPS_ArrayHelper < TacticalAircrafts::TacticalAircraftsData::_TEAircraftLatitude_array, TacticalAircrafts::TacticalAircraftsData::_TEAircraftLatitude_array_slice, TacticalAircrafts::TacticalAircraftsData::_TEAircraftLatitude_array_uniq_>::free (TacticalAircrafts::TacticalAircraftsData::_TEAircraftLatitude_array_slice *ptr)
{
   TacticalAircrafts::TacticalAircraftsData::_TEAircraftLatitude_array_free (ptr);
}

TacticalAircrafts::TacticalAircraftsData::_TEAircraftLatitude_array_slice * TacticalAircrafts::TacticalAircraftsData::_TEAircraftLatitude_array_alloc ()
{
   DDS::Double * ret = (DDS::Double*) new DDS::Double [5];
   return (_TEAircraftLatitude_array_slice *) ret;
}

void TacticalAircrafts::TacticalAircraftsData::_TEAircraftLatitude_array_free (_TEAircraftLatitude_array_slice * s)
{
   delete [] s;
}

void TacticalAircrafts::TacticalAircraftsData::_TEAircraftLatitude_array_copy
(
   _TEAircraftLatitude_array_slice * to,
   const _TEAircraftLatitude_array_slice * from
)
{
   DDS::Double* sv = (DDS::Double*) from;
   DDS::Double* tv = (DDS::Double*) to;
   for (DDS::ULong i = 0; i < 5; i++) tv[i] = sv[i];
}

TacticalAircrafts::TacticalAircraftsData::_TEAircraftLatitude_array_slice * TacticalAircrafts::TacticalAircraftsData::_TEAircraftLatitude_array_dup
   (const _TEAircraftLatitude_array_slice * from)
{
   _TEAircraftLatitude_array_slice * to = _TEAircraftLatitude_array_alloc ();
   _TEAircraftLatitude_array_copy (to, from);
   return to;
}


#if DDS_USE_EXPLICIT_TEMPLATES
template class DDS_DCPS_FArray_var< TacticalAircrafts::TacticalAircraftsData::_TEAircraftVelocity_array, TacticalAircrafts::TacticalAircraftsData::_TEAircraftVelocity_array_slice, struct TacticalAircrafts::TacticalAircraftsData::_TEAircraftVelocity_array_uniq_>;
template class DDS_DCPS_Array_forany< TacticalAircrafts::TacticalAircraftsData::_TEAircraftVelocity_array, TacticalAircrafts::TacticalAircraftsData::_TEAircraftVelocity_array_slice, struct TacticalAircrafts::TacticalAircraftsData::_TEAircraftVelocity_array_uniq_>;
#endif

template <>
TacticalAircrafts::TacticalAircraftsData::_TEAircraftVelocity_array_slice* DDS_DCPS_ArrayHelper < TacticalAircrafts::TacticalAircraftsData::_TEAircraftVelocity_array, TacticalAircrafts::TacticalAircraftsData::_TEAircraftVelocity_array_slice, TacticalAircrafts::TacticalAircraftsData::_TEAircraftVelocity_array_uniq_>::alloc ()
{
   return TacticalAircrafts::TacticalAircraftsData::_TEAircraftVelocity_array_alloc ();
}

template <>
void DDS_DCPS_ArrayHelper < TacticalAircrafts::TacticalAircraftsData::_TEAircraftVelocity_array, TacticalAircrafts::TacticalAircraftsData::_TEAircraftVelocity_array_slice, TacticalAircrafts::TacticalAircraftsData::_TEAircraftVelocity_array_uniq_>::copy (TacticalAircrafts::TacticalAircraftsData::_TEAircraftVelocity_array_slice *to, const TacticalAircrafts::TacticalAircraftsData::_TEAircraftVelocity_array_slice* from)
{
   TacticalAircrafts::TacticalAircraftsData::_TEAircraftVelocity_array_copy (to, from);
}

template <>
void DDS_DCPS_ArrayHelper < TacticalAircrafts::TacticalAircraftsData::_TEAircraftVelocity_array, TacticalAircrafts::TacticalAircraftsData::_TEAircraftVelocity_array_slice, TacticalAircrafts::TacticalAircraftsData::_TEAircraftVelocity_array_uniq_>::free (TacticalAircrafts::TacticalAircraftsData::_TEAircraftVelocity_array_slice *ptr)
{
   TacticalAircrafts::TacticalAircraftsData::_TEAircraftVelocity_array_free (ptr);
}

TacticalAircrafts::TacticalAircraftsData::_TEAircraftVelocity_array_slice * TacticalAircrafts::TacticalAircraftsData::_TEAircraftVelocity_array_alloc ()
{
   DDS::Double * ret = (DDS::Double*) new DDS::Double [5];
   return (_TEAircraftVelocity_array_slice *) ret;
}

void TacticalAircrafts::TacticalAircraftsData::_TEAircraftVelocity_array_free (_TEAircraftVelocity_array_slice * s)
{
   delete [] s;
}

void TacticalAircrafts::TacticalAircraftsData::_TEAircraftVelocity_array_copy
(
   _TEAircraftVelocity_array_slice * to,
   const _TEAircraftVelocity_array_slice * from
)
{
   DDS::Double* sv = (DDS::Double*) from;
   DDS::Double* tv = (DDS::Double*) to;
   for (DDS::ULong i = 0; i < 5; i++) tv[i] = sv[i];
}

TacticalAircrafts::TacticalAircraftsData::_TEAircraftVelocity_array_slice * TacticalAircrafts::TacticalAircraftsData::_TEAircraftVelocity_array_dup
   (const _TEAircraftVelocity_array_slice * from)
{
   _TEAircraftVelocity_array_slice * to = _TEAircraftVelocity_array_alloc ();
   _TEAircraftVelocity_array_copy (to, from);
   return to;
}


#if DDS_USE_EXPLICIT_TEMPLATES
template class DDS_DCPS_VArray_var< TacticalAircrafts::TacticalAircraftsData::_TEAircraftName_array, TacticalAircrafts::TacticalAircraftsData::_TEAircraftName_array_slice, struct TacticalAircrafts::TacticalAircraftsData::_TEAircraftName_array_uniq_>;
template class DDS_DCPS_Array_forany< TacticalAircrafts::TacticalAircraftsData::_TEAircraftName_array, TacticalAircrafts::TacticalAircraftsData::_TEAircraftName_array_slice, struct TacticalAircrafts::TacticalAircraftsData::_TEAircraftName_array_uniq_>;
template class DDS_DCPS_VLArray_out < TacticalAircrafts::TacticalAircraftsData::_TEAircraftName_array, TacticalAircrafts::TacticalAircraftsData::_TEAircraftName_array_slice, TacticalAircrafts::TacticalAircraftsData::_TEAircraftName_array_var, TacticalAircrafts::TacticalAircraftsData::_TEAircraftName_array_uniq_>;
#endif

template <>
TacticalAircrafts::TacticalAircraftsData::_TEAircraftName_array_slice* DDS_DCPS_ArrayHelper < TacticalAircrafts::TacticalAircraftsData::_TEAircraftName_array, TacticalAircrafts::TacticalAircraftsData::_TEAircraftName_array_slice, TacticalAircrafts::TacticalAircraftsData::_TEAircraftName_array_uniq_>::alloc ()
{
   return TacticalAircrafts::TacticalAircraftsData::_TEAircraftName_array_alloc ();
}

template <>
void DDS_DCPS_ArrayHelper < TacticalAircrafts::TacticalAircraftsData::_TEAircraftName_array, TacticalAircrafts::TacticalAircraftsData::_TEAircraftName_array_slice, TacticalAircrafts::TacticalAircraftsData::_TEAircraftName_array_uniq_>::copy (TacticalAircrafts::TacticalAircraftsData::_TEAircraftName_array_slice *to, const TacticalAircrafts::TacticalAircraftsData::_TEAircraftName_array_slice* from)
{
   TacticalAircrafts::TacticalAircraftsData::_TEAircraftName_array_copy (to, from);
}

template <>
void DDS_DCPS_ArrayHelper < TacticalAircrafts::TacticalAircraftsData::_TEAircraftName_array, TacticalAircrafts::TacticalAircraftsData::_TEAircraftName_array_slice, TacticalAircrafts::TacticalAircraftsData::_TEAircraftName_array_uniq_>::free (TacticalAircrafts::TacticalAircraftsData::_TEAircraftName_array_slice *ptr)
{
   TacticalAircrafts::TacticalAircraftsData::_TEAircraftName_array_free (ptr);
}

TacticalAircrafts::TacticalAircraftsData::_TEAircraftName_array_slice * TacticalAircrafts::TacticalAircraftsData::_TEAircraftName_array_alloc ()
{
   DDS::String_mgr * ret = (DDS::String_mgr*) new DDS::String_mgr [5];
   for (DDS::ULong i = 0; i < 5; i++)
   {
      ret[i] = (DDS::String) 0;
   }
   return (_TEAircraftName_array_slice *) ret;
}

void TacticalAircrafts::TacticalAircraftsData::_TEAircraftName_array_free (_TEAircraftName_array_slice * s)
{
   if (s)
   {
      DDS::String_mgr * base = (DDS::String_mgr*) s;
      for (DDS::ULong i = 0; i < 5; i++)
      {
         base[i] = (DDS::String) 0;
      }
   }
   delete [] s;
}

void TacticalAircrafts::TacticalAircraftsData::_TEAircraftName_array_copy
(
   _TEAircraftName_array_slice * to,
   const _TEAircraftName_array_slice * from
)
{
   DDS::String_mgr* sv = (DDS::String_mgr*) from;
   DDS::String_mgr* tv = (DDS::String_mgr*) to;
   for (DDS::ULong i = 0; i < 5; i++) tv[i] = DDS::string_dup (sv[i]);
}

TacticalAircrafts::TacticalAircraftsData::_TEAircraftName_array_slice * TacticalAircrafts::TacticalAircraftsData::_TEAircraftName_array_dup
   (const _TEAircraftName_array_slice * from)
{
   _TEAircraftName_array_slice * to = _TEAircraftName_array_alloc ();
   _TEAircraftName_array_copy (to, from);
   return to;
}


#if DDS_USE_EXPLICIT_TEMPLATES
template class DDS_DCPS_FArray_var< TacticalAircrafts::TacticalAircraftsData::_TEAircraftExists_array, TacticalAircrafts::TacticalAircraftsData::_TEAircraftExists_array_slice, struct TacticalAircrafts::TacticalAircraftsData::_TEAircraftExists_array_uniq_>;
template class DDS_DCPS_Array_forany< TacticalAircrafts::TacticalAircraftsData::_TEAircraftExists_array, TacticalAircrafts::TacticalAircraftsData::_TEAircraftExists_array_slice, struct TacticalAircrafts::TacticalAircraftsData::_TEAircraftExists_array_uniq_>;
#endif

template <>
TacticalAircrafts::TacticalAircraftsData::_TEAircraftExists_array_slice* DDS_DCPS_ArrayHelper < TacticalAircrafts::TacticalAircraftsData::_TEAircraftExists_array, TacticalAircrafts::TacticalAircraftsData::_TEAircraftExists_array_slice, TacticalAircrafts::TacticalAircraftsData::_TEAircraftExists_array_uniq_>::alloc ()
{
   return TacticalAircrafts::TacticalAircraftsData::_TEAircraftExists_array_alloc ();
}

template <>
void DDS_DCPS_ArrayHelper < TacticalAircrafts::TacticalAircraftsData::_TEAircraftExists_array, TacticalAircrafts::TacticalAircraftsData::_TEAircraftExists_array_slice, TacticalAircrafts::TacticalAircraftsData::_TEAircraftExists_array_uniq_>::copy (TacticalAircrafts::TacticalAircraftsData::_TEAircraftExists_array_slice *to, const TacticalAircrafts::TacticalAircraftsData::_TEAircraftExists_array_slice* from)
{
   TacticalAircrafts::TacticalAircraftsData::_TEAircraftExists_array_copy (to, from);
}

template <>
void DDS_DCPS_ArrayHelper < TacticalAircrafts::TacticalAircraftsData::_TEAircraftExists_array, TacticalAircrafts::TacticalAircraftsData::_TEAircraftExists_array_slice, TacticalAircrafts::TacticalAircraftsData::_TEAircraftExists_array_uniq_>::free (TacticalAircrafts::TacticalAircraftsData::_TEAircraftExists_array_slice *ptr)
{
   TacticalAircrafts::TacticalAircraftsData::_TEAircraftExists_array_free (ptr);
}

TacticalAircrafts::TacticalAircraftsData::_TEAircraftExists_array_slice * TacticalAircrafts::TacticalAircraftsData::_TEAircraftExists_array_alloc ()
{
   DDS::Boolean * ret = (DDS::Boolean*) new DDS::Boolean [5];
   return (_TEAircraftExists_array_slice *) ret;
}

void TacticalAircrafts::TacticalAircraftsData::_TEAircraftExists_array_free (_TEAircraftExists_array_slice * s)
{
   delete [] s;
}

void TacticalAircrafts::TacticalAircraftsData::_TEAircraftExists_array_copy
(
   _TEAircraftExists_array_slice * to,
   const _TEAircraftExists_array_slice * from
)
{
   DDS::Boolean* sv = (DDS::Boolean*) from;
   DDS::Boolean* tv = (DDS::Boolean*) to;
   for (DDS::ULong i = 0; i < 5; i++) tv[i] = sv[i];
}

TacticalAircrafts::TacticalAircraftsData::_TEAircraftExists_array_slice * TacticalAircrafts::TacticalAircraftsData::_TEAircraftExists_array_dup
   (const _TEAircraftExists_array_slice * from)
{
   _TEAircraftExists_array_slice * to = _TEAircraftExists_array_alloc ();
   _TEAircraftExists_array_copy (to, from);
   return to;
}




