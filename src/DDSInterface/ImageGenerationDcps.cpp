//******************************************************************
// 
//  Generated by IDL to C++ Translator
//  
//  File name: ImageGenerationDcps.cpp
//  Source: ImageGenerationData/ImageGenerationDcps.idl
//  Generated: Tue Feb 28 15:04:54 2017
//  OpenSplice V5.5.1OSS
//  
//******************************************************************

#include "ImageGenerationDcps.h"

#if DDS_USE_EXPLICIT_TEMPLATES
template class DDS_DCPSUFLSeq < ImageGeneration::ImageGenerationData, struct ImageGenerationDataSeq_uniq_>;
#endif

const char * ImageGeneration::ImageGenerationDataTypeSupportInterface::_local_id = "IDL:ImageGeneration/ImageGenerationDataTypeSupportInterface:1.0";

ImageGeneration::ImageGenerationDataTypeSupportInterface_ptr ImageGeneration::ImageGenerationDataTypeSupportInterface::_duplicate (ImageGeneration::ImageGenerationDataTypeSupportInterface_ptr p)
{
   if (p) p->m_count++;
   return p;
}

DDS::Boolean ImageGeneration::ImageGenerationDataTypeSupportInterface::_local_is_a (const char * _id)
{
   if (strcmp (_id, ImageGeneration::ImageGenerationDataTypeSupportInterface::_local_id) == 0)
   {
      return true;
   }

   typedef DDS::TypeSupport NestedBase_1;

   if (NestedBase_1::_local_is_a (_id))
   {
      return true;
   }

   return false;
}

ImageGeneration::ImageGenerationDataTypeSupportInterface_ptr ImageGeneration::ImageGenerationDataTypeSupportInterface::_narrow (DDS::Object_ptr p)
{
   ImageGeneration::ImageGenerationDataTypeSupportInterface_ptr result = NULL;
   if (p && p->_is_a (ImageGeneration::ImageGenerationDataTypeSupportInterface::_local_id))
   {
      result = dynamic_cast < ImageGeneration::ImageGenerationDataTypeSupportInterface_ptr> (p);
      result->m_count++;
   }
   return result;
}

ImageGeneration::ImageGenerationDataTypeSupportInterface_ptr ImageGeneration::ImageGenerationDataTypeSupportInterface::_unchecked_narrow (DDS::Object_ptr p)
{
   ImageGeneration::ImageGenerationDataTypeSupportInterface_ptr result;
   result = dynamic_cast < ImageGeneration::ImageGenerationDataTypeSupportInterface_ptr> (p);
   result->m_count++;
   return result;
}

const char * ImageGeneration::ImageGenerationDataDataWriter::_local_id = "IDL:ImageGeneration/ImageGenerationDataDataWriter:1.0";

ImageGeneration::ImageGenerationDataDataWriter_ptr ImageGeneration::ImageGenerationDataDataWriter::_duplicate (ImageGeneration::ImageGenerationDataDataWriter_ptr p)
{
   if (p) p->m_count++;
   return p;
}

DDS::Boolean ImageGeneration::ImageGenerationDataDataWriter::_local_is_a (const char * _id)
{
   if (strcmp (_id, ImageGeneration::ImageGenerationDataDataWriter::_local_id) == 0)
   {
      return true;
   }

   typedef DDS::DataWriter NestedBase_1;

   if (NestedBase_1::_local_is_a (_id))
   {
      return true;
   }

   return false;
}

ImageGeneration::ImageGenerationDataDataWriter_ptr ImageGeneration::ImageGenerationDataDataWriter::_narrow (DDS::Object_ptr p)
{
   ImageGeneration::ImageGenerationDataDataWriter_ptr result = NULL;
   if (p && p->_is_a (ImageGeneration::ImageGenerationDataDataWriter::_local_id))
   {
      result = dynamic_cast < ImageGeneration::ImageGenerationDataDataWriter_ptr> (p);
      result->m_count++;
   }
   return result;
}

ImageGeneration::ImageGenerationDataDataWriter_ptr ImageGeneration::ImageGenerationDataDataWriter::_unchecked_narrow (DDS::Object_ptr p)
{
   ImageGeneration::ImageGenerationDataDataWriter_ptr result;
   result = dynamic_cast < ImageGeneration::ImageGenerationDataDataWriter_ptr> (p);
   result->m_count++;
   return result;
}

const char * ImageGeneration::ImageGenerationDataDataReader::_local_id = "IDL:ImageGeneration/ImageGenerationDataDataReader:1.0";

ImageGeneration::ImageGenerationDataDataReader_ptr ImageGeneration::ImageGenerationDataDataReader::_duplicate (ImageGeneration::ImageGenerationDataDataReader_ptr p)
{
   if (p) p->m_count++;
   return p;
}

DDS::Boolean ImageGeneration::ImageGenerationDataDataReader::_local_is_a (const char * _id)
{
   if (strcmp (_id, ImageGeneration::ImageGenerationDataDataReader::_local_id) == 0)
   {
      return true;
   }

   typedef DDS::DataReader NestedBase_1;

   if (NestedBase_1::_local_is_a (_id))
   {
      return true;
   }

   return false;
}

ImageGeneration::ImageGenerationDataDataReader_ptr ImageGeneration::ImageGenerationDataDataReader::_narrow (DDS::Object_ptr p)
{
   ImageGeneration::ImageGenerationDataDataReader_ptr result = NULL;
   if (p && p->_is_a (ImageGeneration::ImageGenerationDataDataReader::_local_id))
   {
      result = dynamic_cast < ImageGeneration::ImageGenerationDataDataReader_ptr> (p);
      result->m_count++;
   }
   return result;
}

ImageGeneration::ImageGenerationDataDataReader_ptr ImageGeneration::ImageGenerationDataDataReader::_unchecked_narrow (DDS::Object_ptr p)
{
   ImageGeneration::ImageGenerationDataDataReader_ptr result;
   result = dynamic_cast < ImageGeneration::ImageGenerationDataDataReader_ptr> (p);
   result->m_count++;
   return result;
}

const char * ImageGeneration::ImageGenerationDataDataReaderView::_local_id = "IDL:ImageGeneration/ImageGenerationDataDataReaderView:1.0";

ImageGeneration::ImageGenerationDataDataReaderView_ptr ImageGeneration::ImageGenerationDataDataReaderView::_duplicate (ImageGeneration::ImageGenerationDataDataReaderView_ptr p)
{
   if (p) p->m_count++;
   return p;
}

DDS::Boolean ImageGeneration::ImageGenerationDataDataReaderView::_local_is_a (const char * _id)
{
   if (strcmp (_id, ImageGeneration::ImageGenerationDataDataReaderView::_local_id) == 0)
   {
      return true;
   }

   typedef DDS::DataReaderView NestedBase_1;

   if (NestedBase_1::_local_is_a (_id))
   {
      return true;
   }

   return false;
}

ImageGeneration::ImageGenerationDataDataReaderView_ptr ImageGeneration::ImageGenerationDataDataReaderView::_narrow (DDS::Object_ptr p)
{
   ImageGeneration::ImageGenerationDataDataReaderView_ptr result = NULL;
   if (p && p->_is_a (ImageGeneration::ImageGenerationDataDataReaderView::_local_id))
   {
      result = dynamic_cast < ImageGeneration::ImageGenerationDataDataReaderView_ptr> (p);
      result->m_count++;
   }
   return result;
}

ImageGeneration::ImageGenerationDataDataReaderView_ptr ImageGeneration::ImageGenerationDataDataReaderView::_unchecked_narrow (DDS::Object_ptr p)
{
   ImageGeneration::ImageGenerationDataDataReaderView_ptr result;
   result = dynamic_cast < ImageGeneration::ImageGenerationDataDataReaderView_ptr> (p);
   result->m_count++;
   return result;
}



